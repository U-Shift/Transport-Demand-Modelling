Model run by gabri using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : MNL_SimpleExample
Model description                           : MNL model
Model run at                                : 2025-01-06 15:59:02.693547
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -0.841938
     reciprocal of condition number         : 4.02921e-08
Number of individuals                       : 500
Number of rows in database                  : 1000
Number of modelled outcomes                 : 1000

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1170.86
LL at equal shares, LL(0)                   : -1170.86
LL at observed shares, LL(C)                : -1085.14
LL(final)                                   : -1082.27
Rho-squared vs equal shares                  :  0.0757 
Adj.Rho-squared vs equal shares              :  0.0697 
Rho-squared vs observed shares               :  0.0026 
Adj.Rho-squared vs observed shares           :  -0.001 
AIC                                         :  2178.54 
BIC                                         :  2212.9 

Estimated parameters                        : 7
Time taken (hh:mm:ss)                       :  00:00:3.41 
     pre-estimation                         :  00:00:0.42 
     estimation                             :  00:00:1.86 
     post-estimation                        :  00:00:1.13 
Iterations                                  :  7  

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_car      0.000000          NA          NA          NA            NA
asc_bus      0.434501    1.018586      0.4266    0.990855        0.4385
asc_air     -0.427725    0.659228     -0.6488    0.671860       -0.6366
asc_rail     0.189063    0.787252      0.2402    0.794124        0.2381
b_tt_car  -6.2637e-04    0.001507     -0.4156    0.001531       -0.4092
b_tt_bus    -0.005139    0.002589     -1.9845    0.002568       -2.0013
b_tt_air    -0.003602    0.006069     -0.5935    0.006315       -0.5704
b_tt_rail   -0.004131    0.004203     -0.9828    0.004409       -0.9369


Overview of choices for MNL model component :
                                    car    bus    air   rail
Times available                  778.00 902.00 752.00 874.00
Times chosen                     332.00 126.00 215.00 327.00
Percentage chosen overall         33.20  12.60  21.50  32.70
Percentage chosen when available  42.67  13.97  28.59  37.41



Classical covariance matrix:
              asc_bus     asc_air    asc_rail    b_tt_car    b_tt_bus    b_tt_air   b_tt_rail
asc_bus      1.037517    0.171083    0.178090  5.6651e-04   -0.002336  1.0205e-04  -7.001e-07
asc_air      0.171083    0.434581    0.243501  7.5035e-04  1.7161e-04   -0.002792  -6.349e-05
asc_rail     0.178090    0.243501    0.619765  7.6366e-04  1.6301e-04  -6.365e-05   -0.002654
b_tt_car   5.6651e-04  7.5035e-04  7.6366e-04   2.271e-06   3.548e-07  -7.404e-07  -4.545e-07
b_tt_bus    -0.002336  1.7161e-04  1.6301e-04   3.548e-07   6.705e-06  -8.956e-07  -3.767e-07
b_tt_air   1.0205e-04   -0.002792  -6.365e-05  -7.404e-07  -8.956e-07   3.683e-05  -1.130e-06
b_tt_rail  -7.001e-07  -6.349e-05   -0.002654  -4.545e-07  -3.767e-07  -1.130e-06   1.767e-05

Robust covariance matrix:
              asc_bus     asc_air    asc_rail    b_tt_car    b_tt_bus    b_tt_air   b_tt_rail
asc_bus      0.981793    0.174405    0.130576  5.0798e-04   -0.002220 -1.3873e-04  2.3408e-04
asc_air      0.174405    0.451397    0.224948  7.6058e-04  1.8048e-04   -0.002986  1.0795e-04
asc_rail     0.130576    0.224948    0.630632  7.2854e-04  2.7165e-04   3.450e-05   -0.002791
b_tt_car   5.0798e-04  7.6058e-04  7.2854e-04   2.343e-06   6.100e-07  -6.299e-07  -4.872e-08
b_tt_bus    -0.002220  1.8048e-04  2.7165e-04   6.100e-07   6.593e-06  -1.305e-07  -6.635e-07
b_tt_air  -1.3873e-04   -0.002986   3.450e-05  -6.299e-07  -1.305e-07   3.987e-05  -1.797e-06
b_tt_rail  2.3408e-04  1.0795e-04   -0.002791  -4.872e-08  -6.635e-07  -1.797e-06   1.944e-05

Classical correlation matrix:
              asc_bus     asc_air    asc_rail    b_tt_car    b_tt_bus    b_tt_air   b_tt_rail
asc_bus       1.00000     0.25478     0.22209     0.36905    -0.88582     0.01651 -1.6352e-04
asc_air       0.25478     1.00000     0.46919     0.75528     0.10053    -0.69800    -0.02291
asc_rail      0.22209     0.46919     1.00000     0.64367     0.07997    -0.01332    -0.80199
b_tt_car      0.36905     0.75528     0.64367     1.00000     0.09092    -0.08095    -0.07175
b_tt_bus     -0.88582     0.10053     0.07997     0.09092     1.00000    -0.05699    -0.03461
b_tt_air      0.01651    -0.69800    -0.01332    -0.08095    -0.05699     1.00000    -0.04431
b_tt_rail -1.6352e-04    -0.02291    -0.80199    -0.07175    -0.03461    -0.04431     1.00000

Robust correlation matrix:
              asc_bus     asc_air    asc_rail    b_tt_car    b_tt_bus    b_tt_air   b_tt_rail
asc_bus       1.00000     0.26198    0.165945    0.334950   -0.872696   -0.022173    0.053578
asc_air       0.26198     1.00000    0.421614    0.739622    0.104620   -0.703880    0.036441
asc_rail      0.16595     0.42161    1.000000    0.599392    0.133220    0.006880   -0.797227
b_tt_car      0.33495     0.73962    0.599392    1.000000    0.155201   -0.065176   -0.007219
b_tt_bus     -0.87270     0.10462    0.133220    0.155201    1.000000   -0.008051   -0.058609
b_tt_air     -0.02217    -0.70388    0.006880   -0.065176   -0.008051    1.000000   -0.064554
b_tt_rail     0.05358     0.03644   -0.797227   -0.007219   -0.058609   -0.064554    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 381           0.1097878
 238           0.1324298
 166           0.1324361
 192           0.1347844
   2           0.1478430
 209           0.1539598
 253           0.1539663
 462           0.1542229
 227           0.1571324
  43           0.1579601
 480           0.1586191
 213           0.1594281
  35           0.1615986
 229           0.1661379
  86           0.1664624
  84           0.1679873
 259           0.1689641
 368           0.1712929
  32           0.1720248
 498           0.1721310

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
asc_car         0.000    0.000000    0.000000
asc_bus         0.000    0.434501    0.434501
asc_air         0.000   -0.427725   -0.427725
asc_rail        0.000    0.189063    0.189063
b_tt_car        0.000 -6.2637e-04 -6.2637e-04
b_tt_bus        0.000   -0.005139   -0.005139
b_tt_air        0.000   -0.003602   -0.003602
b_tt_rail       0.000   -0.004131   -0.004131

Settings and functions used in model definition:

apollo_control
--------------
                       Value              
modelName              "MNL_SimpleExample"
modelDescr             "MNL model"        
indivID                "ID"               
outputDirectory        "output/"          
debug                  "FALSE"            
nCores                 "1"                
workInLogs             "FALSE"            
seed                   "13"               
mixing                 "FALSE"            
HB                     "FALSE"            
noValidation           "FALSE"            
noDiagnostics          "FALSE"            
calculateLLC           "TRUE"             
analyticHessian        "FALSE"            
memorySaver            "FALSE"            
panelData              "TRUE"             
analyticGrad           "TRUE"             
analyticGrad_manualSet "FALSE"            
overridePanel          "FALSE"            
preventOverridePanel   "FALSE"            
noModification         "FALSE"            

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_bus   0.4345007799
asc_air   0.4277252297
asc_rail  0.1890631061
b_tt_car  0.0006263678
b_tt_bus  0.0051386705
b_tt_air  0.0036015650
b_tt_rail 0.0041311299


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){
  
  # Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  
  # Create list of probabilities P
  P = list()
  
  # List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["car"]]  = asc_car  + b_tt_car  * time_car 
  V[["bus"]]  = asc_bus  + b_tt_bus  * time_bus 
  V[["air"]]  = asc_air  + b_tt_air  * time_air  
  V[["rail"]] = asc_rail + b_tt_rail * time_rail 
  
  # Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(car=1, bus=2, air=3, rail=4), 
    avail         = list(car=av_car, bus=av_bus, air=av_air, rail=av_rail), 
    choiceVar     = choice,
    utilities     = V
  )
  
  # Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
  # Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)
  
  # Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
